"http://stackoverflow.com/questions/30444890/vim-use-python3-interpreter-in-python-mode
"git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim

set backspace=indent,eol,start
set scrolloff=3
set cursorline
autocmd Filetype gitcommit setlocal spell textwidth=72
set pastetoggle=<F2>
map <F4> :%retab! <CR> :w <CR> 
set nu
set ts=4
set sw=4
set expandtab
syntax on
set hls
set incsearch
set cindent
set autoindent
set term=xterm-256color
set guifont=Monaco\ 12
set guifont=Monaco\ for\ Powerline\ Plus\ Nerd\ File\ Types\ 12
set laststatus=2
set encoding=utf-8
set termencoding=utf-8
set formatoptions+=mM
set fencs=utf-8,gbk

function HeaderPython()
    call setline(1, "#!/usr/bin/env python")
    call append(1, "# -*- coding: utf-8 -*-")
    normal G
    normal o
    normal o
    call setline(5, "if __name__ == '__main__':")
    call setline(6, "    pass")
endf
autocmd bufnewfile *.py call HeaderPython()

function HeaderSh()
    call setline(1, "#!/usr/bin/env bash")
    normal G
    normal o
    normal o
endf
autocmd bufnewfile *.sh call HeaderSh()

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

"for php
Bundle 'captbaritone/better-indent-support-for-php-with-html'
Bundle 'Shougo/vimproc'
Bundle 'Shougo/unite.vim'
Bundle 'm2mdas/phpcomplete-extended'
Plugin 'stanangeloff/php.vim'
" endfor php
Plugin 'terryma/vim-multiple-cursors'
Plugin 'PegasusWang/vim-ubuntu-pastebin'
Plugin 'rking/ag.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'vim-scripts/LargeFile'
Plugin 'Yggdroot/indentLine'
Plugin 'mhinz/vim-startify'
Plugin 'VundleVim/Vundle.vim'
" let Vundle manage Vundle
Bundle 'gmarik/vundle'
Plugin 'glench/vim-jinja2-syntax'

"my Bundle here:
" http://vimawesome.com
" original repos on github
Plugin 'rykka/riv.vim'    " rst
Bundle 'Rykka/InstantRst'

Plugin 'cakebaker/scss-syntax.vim'
Plugin 'majutsushi/tagbar'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Bundle 'pangloss/vim-javascript'
Plugin 'jelera/vim-javascript-syntax'
Bundle 'mxw/vim-jsx'
Plugin 'kchmck/vim-coffee-script'
Plugin 'mattn/emmet-vim'
Bundle 'moll/vim-node'
Bundle 'kien/ctrlp.vim'
Bundle 'sukima/xmledit'
"Bundle 'sjl/gundo.vim'
Bundle 'jiangmiao/auto-pairs'
"Bundle 'davidhalter/jedi-vim'
Bundle 'klen/python-mode'
Plugin 'fatih/vim-go'
Plugin 'jmcantrell/vim-virtualenv'
Bundle 'heavenshell/vim-pydocstring'
Plugin 'kien/rainbow_parentheses.vim'
"Bundle 'Valloric/ListToggle'
Bundle 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
"Bundle 'Valloric/YouCompleteMe'
Bundle 'scrooloose/syntastic'
"Bundle 't9md/vim-quickhl'
Plugin 'xuyuanp/nerdtree-git-plugin'
Bundle 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-surround'
Plugin 'easymotion/vim-easymotion'    " 快速移动插件, ',,w'可以在单词上出现前缀，然后快速跳转
Plugin 'haya14busa/incsearch.vim'
Plugin 'haya14busa/incsearch-fuzzy.vim'
Plugin 'https://github.com/Shougo/unite.vim.git'
Plugin 'https://github.com/Shougo/vimfiler.vim.git'
"Plugin 'ryanoasis/vim-devicons'

" 模糊搜索，使用z/支持模糊搜索
map z/ <Plug>(incsearch-fuzzy-/)
map z? <Plug>(incsearch-fuzzy-?)
map zg/ <Plug>(incsearch-fuzzy-stay)

"..................................
" vim-scripts repos
"Bundle 'YankRing.vim'
"Bundle 'vcscommand.vim'
Bundle 'ShowPairs'
"Bundle 'SudoEdit.vim'
"Bundle 'EasyGrep'
"Bundle 'VOoM'
"Bundle 'VimIM'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
Plugin 'wincent/command-t'
" git repos on your local machine (i.e. when working on your own plugin)
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" for python settings
" Override go-to.definition key shortcut to Ctrl-]
nmap <silent> <C-d> <Plug>(pydocstring)
nnoremap py :!python %<cr>
let g:pymode_python = 'python3'  " Values are `python`, `python3`, `disable`.
let g:pymode_path = ['/home/wnn/.pyenv/versions/pyenv_3.5.0/lib/python3.5/site-packages/']
let g:pymode_syntax_all = 1
let g:pymode_syntax_print_as_function = 1
let g:pymode_syntax_highlight_async_await = g:pymode_syntax_all
let g:pymode_syntax_highlight_self = g:pymode_syntax_all
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_trim_whitespaces = 1
let g:pymode_quickfix_maxheight = 2
let g:pymode_indent = 1
let g:pymode_folding = 1
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_cmd = 'import ipdb; ipdb.set_trace()  # BREAKPOINT TODO REMOVE'
let g:pymode_breakpoint_bind = "<C-k>"



let g:pymode_run = 1
let g:pymode_run_bind = "<C-j>"
let g:pymode_virtualenv = 1
"let g:pymode_virtualenv_path = $VIRTUAL_ENV

" Override view python doc key shortcut to Ctrl-Shift-d
set completeopt=menu    " Disable new window auto documentation, https://github.com/python-mode/python-mode/issues/384
let g:pymode_doc=1
let g:pymode_doc_bind = 'K'

autocmd CompleteDone * pclose
let g:pymode_rope = 1
let g:pymode_rope_completion = 1    " conflict with jedi
let g:pymode_rope_autoimport = 1
let g:pymode_rope_complete_on_dot = 1
let g:pymode_rope_completion_bind = '<C-Space>'
let g:pymode_rope_goto_definition_bind = '<C-]>'
let g:pymode_rope_goto_definition_cmd = 'vnew'
let g:pymode_rope_lookup_project = 0

let g:pymode_lint = 1
let g:pymode_lint_on_write = 0
let g:pymode_lint_on_fly = 0
let g:pymode_lint_message = 1
let g:pymode_lint_checkers = ['pyflakes', 'pep8', 'mccabe', 'pylint']
let g:syntastic_python_checkers = ['pep8']
let g:pymode_lint_cwindow = 0    " open quickfix window
let g:pymode_lint_ignore = "C0111, W0105, C0325"
let g:pymode_lint_signs = 1
let g:pymode_lint_todo_symbol = '⚠️'
let g:pymode_lint_error_symbol = '❌'
let g:pymode_lint_comment_symbol = '😢'
" 修改默认的max-line红线为浅色，solorized黑色主题
hi Search cterm=NONE ctermfg=black ctermbg=blue
highlight ColorColumn ctermbg=black 
let g:pymode_options_max_line_length = 80
let g:pymode_options_colorcolumn = 1


" For emmemt only avilable for html,css,sass
let g:user_emmet_install_global = 0
autocmd FileType html,mako,css,sass,scss EmmetInstal
" emment key
let g:user_emmet_leader_key='<C-J>'

" for nerdtree
" autocmd vimenter * NERDTree
let NERDTreeIgnore=['\.pyc$', '\~$', '__pycache__'] "ignore files in NERDTree
nnoremap <F10> :exe 'NERDTreeToggle' <CR>


" for Tagbarbar, sudo apt-get install ctags
nnoremap <silent> <F12> :TagbarToggle<CR>
let g:tagbar_autofocus = 1
let g:tagbar_sort = 1
let g:tagbar_autopreview = 0


" for airline, http://vimawesome.com/plugin/vim-airline
let g:airline#extensions#tabline#enabled = 1
function! ArilineInit()
    let g:airline_theme = 'wombat'
    let g:airline_section_a = airline#section#create(['mode', ' ', 'branch'])
    let g:airline_section_b = airline#section#create_left(['ffenc', 'hunks', '%F'])
    "let g:airline_section_c = airline#section#create(['filetype'])
    let g:airline_section_x = airline#section#create(['%P'])
    let g:airline_section_y = airline#section#create(['%B'])
    let g:airline_section_z = airline#section#create_right(['%l', '%c'])
endfunction
autocmd VimEnter * call ArilineInit()


" shortcuts to vimdiff, http://stackoverflow.com/questions/7309707/why-does-git-mergetool-opens-4-windows-in-vimdiff-id-expect-3
let mapleader=','
let g:mapleader=','

if &diff
    map <leader>1 :diffget LOCAL<CR>
    map <leader>2 :diffget BASE<CR>
    map <leader>3 :diffget REMOTE<CR>
endif


" 高亮当前选中单词
autocmd CursorMoved * exe exists("HlUnderCursor")?HlUnderCursor?printf('match IncSearch /\V\<%s\>/', escape(expand('<cword>'), '/\')):'match none':""
nnoremap <silent> <F3> :exe "let HlUnderCursor=exists(\"HlUnderCursor\")?HlUnderCursor*-1+1:1"<CR>


" when use diff from cmd line, change color theme
if &diff
    colorscheme evening
endif

" 书写rst用到
let proj1 = { 'path': '~/Program/python-web-guide',}
let g:riv_projects = [proj1]


" ctrlp, 在~/.agignore添加一行node_modules
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'


" 指定UltiSnips python的docstring风格, sphinx, google, numpy
let g:ultisnips_python_style = 'google'

" 用ctrl+l可以在insert和command模式都可以保存
inoremap <c-l> <c-o>:w<cr>
nnoremap <c-l> :w<cr>
nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> [n :bnext<CR>

" 评论配置
let g:NERDTrimTrailingWhitespace = 1
let g:javascript_plugin_jsdoc = 1

"http://vimawesome.com/plugin/rainbow-parentheses-vim   花里胡哨的彩虹括号^_^
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
let g:rbpt_max = 16

"http://vimawesome.com/plugin/scss-syntax-vim
au BufRead,BufNewFile *.scss set filetype=scss.css


"语法检查配置
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_enable_javascript_checker = 1
let g:syntastic_javascript_eslint_exec = '/Users/pegasus/.nvm/versions/node/v4.0.0/bin/eslint'
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_loc_list_height = 3

let g:syntastic_error_symbol = '❌'
let g:syntastic_style_error_symbol = '☠️'
let g:syntastic_warning_symbol = '⚠️'
let g:syntastic_style_warning_symbol = '💩'

highlight link SyntasticErrorSign SignColumn
highlight link SyntasticWarningSign SignColumn
highlight link SyntasticStyleErrorSign SignColumn
highlight link SyntasticStyleWarningSign SignColumn
let g:indentLine_enabled = 1
let g:indentLine_color_term = 239


let g:LargeFile=1


" http://stackoverflow.com/questions/16021297/how-to-map-alias-a-command-in-vim, PymodeLint映射成P
command P PymodeLint


"http://sjl.bitbucket.org/gundo.vim/
"nnoremap <F4> :GundoToggle<CR>


let g:WebDevIconsNerdTreeAfterGlyphPadding = ''
